C51 COMPILER V9.59.0.0   MAIN                                                              11/21/2022 21:18:31 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\App\keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "reg52.h"
   2          //对系统默认数据类型进行重定义
   3          typedef unsigned char u8;
   4          typedef unsigned int u16;
   5          #define juzhen P1 //使用宏定义矩阵按键控制口
   6          #define duanxuan P0 //使用宏定义数码管段码口
   7          
   8          //位选
   9          sbit LSA=P2^2;
  10          sbit LSB=P2^3;
  11          sbit LSC=P2^4;
  12          
  13          //共阴极数码管显示0~F 的段码数据
  14          u8 gsmg_code[17]=
  15          {
  16            0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,
  17            0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71
  18          };
  19          u8 string[8]={0,0,0,0,0,0,0,0};
  20          
  21          void delay_10us(u16 ten_us)
  22          {
  23   1        while(ten_us--);
  24   1      }
  25          
  26          
  27          //动态数码管
  28          void smg()
  29          {
  30   1            u8 LSX,i;
  31   1            for(i=0;i<8;i++)
  32   1            {
  33   2              LSX=7-i;
  34   2              LSC=(LSX>>2)&1;LSB=(LSX>>1)&1;LSA=LSX&1;
  35   2              duanxuan=gsmg_code[string[i]];//传送段选数据
  36   2              delay_10us(100);//延时一段时间，等待显示稳定
  37   2              duanxuan=0x00;//消音
  38   2            }
  39   1      }
  40          
  41          
  42          //行列扫描法
  43          u8 key_matrix_ranks_scan(void)
  44          {
  45   1          u8 key_value=0;
  46   1        
  47   1        
  48   1          juzhen=0xf7;//给第一列赋值0，其余全为1
  49   1          if(juzhen!=0xf7)//判断第一列按键是否按下
  50   1          {
  51   2              smg();//消抖并扫描
  52   2              switch(juzhen)//保存第一列按键按下后的键值
  53   2                {
  54   3                    case 0x77: key_value=1;break;
C51 COMPILER V9.59.0.0   MAIN                                                              11/21/2022 21:18:31 PAGE 2   

  55   3                    case 0xb7: key_value=5;break;
  56   3                    case 0xd7: key_value=9;break;
  57   3                    case 0xe7: key_value=13;break;
  58   3                }
  59   2           }
  60   1              while(juzhen!=0xf7)smg();//等待按键松开
  61   1                
  62   1            juzhen=0xfb;//给第二列赋值0，其余全为1
  63   1            if(juzhen!=0xfb)//判断第二列按键是否按下
  64   1            {
  65   2                smg();//消抖并扫描
  66   2                switch(juzhen)//保存第二列按键按下后的键值
  67   2                {
  68   3                case 0x7b: key_value=2;break;
  69   3                case 0xbb: key_value=6;break;
  70   3                case 0xdb: key_value=10;break;
  71   3                case 0xeb: key_value=14;break;
  72   3                }
  73   2            }
  74   1            while(juzhen!=0xfb)smg();//等待按键松开
  75   1            
  76   1            juzhen=0xfd;//给第三列赋值0，其余全为1
  77   1            if(juzhen!=0xfd)//判断第三列按键是否按下
  78   1            {
  79   2            smg();//消抖并扫描
  80   2            switch(juzhen)//保存第三列按键按下后的键值
  81   2              {
  82   3              case 0x7d: key_value=3;break;
  83   3              case 0xbd: key_value=7;break;
  84   3              case 0xdd: key_value=11;break;
  85   3              case 0xed: key_value=15;break;
  86   3              }
  87   2            } 
  88   1              while(juzhen!=0xfd)smg();//等待按键松开
  89   1            
  90   1              
  91   1              juzhen=0xfe;//给第四列赋值0，其余全为1
  92   1              if(juzhen!=0xfe)//判断第四列按键是否按下
  93   1              {
  94   2              smg();//消抖并扫描
  95   2              switch(juzhen)//保存第四列按键按下后的键值
  96   2                {
  97   3                    case 0x7e: key_value=4;break;
  98   3                    case 0xbe: key_value=8;break;
  99   3                    case 0xde: key_value=12;break;
 100   3                    case 0xee: key_value=16;break;
 101   3                }
 102   2             }
 103   1             while(juzhen!=0xfe)smg();//等待按键松开
 104   1             
 105   1             
 106   1             return key_value;
 107   1      }
 108          void main()
 109          {
 110   1        u8 key,i=0;   
 111   1        while(1)
 112   1        {  
 113   2           key=key_matrix_ranks_scan();
 114   2          if(key!=0)
 115   2          {
 116   3            string[i]=key;
C51 COMPILER V9.59.0.0   MAIN                                                              11/21/2022 21:18:31 PAGE 3   

 117   3            i++;
 118   3            if(i==8)
 119   3              i=0;
 120   3          }
 121   2           smg();      
 122   2        }   
 123   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    350    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     25       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
