C51 COMPILER V9.59.0.0   MAIN                                                              01/31/2023 17:23:32 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\App\keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //国玉的主机_数码管显示 num
   2          #include<reg51.h> 
   3          #define uint unsigned int 
   4          #define uchar unsigned char   
   5          uchar data fasong[6]={0,0,0,0,0,0};
   6          uchar i,temp,aa,miao,fen,shi,play=0; 
   7          uchar shige,shishi,fenge,fenshi,miaoge,miaoshi;
   8          /************************************************ 
   9          定义 3 个键， K1 用于调节分，
  10          K2 用于调节时， K3 用于调节时
  11          ************************************************/ 
  12          sbit K1=P3^3; //国玉的 调节分
  13          sbit K2=P3^4; // 国玉的调节时
  14          sbit K3=P3^5; // 国玉的暂停、开始
  15          
  16          void display(uchar miao,uchar fen,uchar shi); // 显示时钟
  17          void play_display(); // 暂停 / 开始函数
  18          void delay(uint z); // 延时函数
  19          void init(); // 初始化函数
  20          //////////////////////////////////////////////////////////
  21          
  22           
  23          uchar code table[]={0x3f,0x06,0x5b,0x4f,0x66, 0x6d,0x7d,0x07,0x7f,0x6f}; 
  24          
  25          void send(unsigned char dat)            //数据发送程序
  26          {
  27   1          SBUF=dat;                           //将要发送的数据存入发送缓冲器中
  28   1        while(TI==0);                       //若发送中断标志位没有置1(正在发送数据)，就等待
  29   1      
  30   1        TI=0;                               //若发送完成，TI自动置1，这里把它清零
  31   1      }
  32          
  33          
  34          
  35          ////////////////////////////////////////////////////////////
  36          void delay(uint z) 
  37          { 
  38   1      uint x,y; 
  39   1      for(x=z;x>0;x--) 
  40   1      for(y=110;y>0;y--); 
  41   1      }
  42          
  43          
  44          
  45          void main()
  46          {
  47   1        unsigned char i=0;
  48   1         init();// 初始化子程序
  49   1      miao=0; 
  50   1      shi=0; 
  51   1      fen=0; 
  52   1        TMOD=0x21;                         //定时器T1工作于方式2（可自动重装的8位定时器）
  53   1        SCON=0x50;                         //串口工作方式1，不允许接收
  54   1        PCON=0x00;                         //波特率不倍增
  55   1        TH1=0xf4;                          //波特率为2400b/s
C51 COMPILER V9.59.0.0   MAIN                                                              01/31/2023 17:23:32 PAGE 2   

  56   1        TL1=0xf4;
  57   1        TR1=1;                             //启动定时器T1（T1作波特率的发生器）
  58   1        REN=1;                         //允许接收数据
  59   1        while(1)
  60   1        { 
  61   2        
  62   2          uchar i;
  63   2      
  64   2      //fasong[0]=shishi;
  65   2      //fasong[1]=shige;
  66   2      //fasong[2]=fenshi;
  67   2      //fasong[3]=fenge;
  68   2      //fasong[4]=miaoshi;
  69   2      //fasong[5]=miaoge; 
  70   2      
  71   2      fasong[0]=miao;
  72   2      fasong[1]=fen;
  73   2      fasong[2]=shi;
  74   2      
  75   2      
  76   2           
  77   2      
  78   2              play_display(); 
  79   2              display(miao,fen,shi);  
  80   2              
  81   2              send(0x55); //开始 头
  82   2              for(i=0;i<6;i++)     //问题出在这个循环地方，解决方法： 改display(miao,fen,shi)函数，或者发送shi、fen、m
             -iao
  83   2              {
  84   3              send(fasong[i]);
  85   3              display(miao,fen,shi);
  86   3              }
  87   2      
  88   2      
  89   2              send(0x60);   //９
  90   2                      
  91   2        }
  92   1      
  93   1      }
  94           ////////////////////////////////////////////////////////////
  95          
  96          void display(uchar miao,uchar fen,uchar shi) // 显示子函数
  97          {
  98   1      uchar shige,shishi,fenge,fenshi,miaoge,miaoshi;
  99   1              shige=shi%10;
 100   1              shishi=shi/10;
 101   1              fenge=fen%10;
 102   1              fenshi=fen/10;
 103   1              miaoge=miao%10;
 104   1              miaoshi=miao/10;
 105   1      
 106   1      P0=0x00; // 显示秒个位
 107   1      P0=table[miaoge]; 
 108   1      P2=0x7f; 
 109   1      delay(1); 
 110   1      P0=0x00; // 显示秒十位
 111   1      P0=table[miaoshi]; 
 112   1      P2=0xbf; 
 113   1      delay(1); 
 114   1      P0=0x00; // 显示 "-" 
 115   1      P0=0x40; 
 116   1      P2=0xdf; 
C51 COMPILER V9.59.0.0   MAIN                                                              01/31/2023 17:23:32 PAGE 3   

 117   1      delay(1); 
 118   1      P0=0x00; // 显示分个位
 119   1      P0=table[fenge]; 
 120   1      P2=0xef; 
 121   1      delay(1); 
 122   1      P0=0x00; // 显示分十位
 123   1      P0=table[fenshi]; 
 124   1      P2=0xf7; 
 125   1      delay(1); 
 126   1      P0=0x00; // 显示 "-" 
 127   1      P0=0x40; 
 128   1      P2=0xfb; 
 129   1      delay(1); 
 130   1      P0=0x00; // 显示时个位
 131   1      P0=table[shige]; 
 132   1      P2=0xfd; 
 133   1      delay(1); 
 134   1      P0=0x00; // 显示时十位
 135   1      P0=table[shishi]; 
 136   1      P2=0xfe; 
 137   1      delay(1); 
 138   1      } 
 139          //////////////////////////////////////////////////////////////
 140          void init() // 初始化子函数
 141          { 
 142   1      temp=0; 
 143   1      //TMOD=0x01; 
 144   1      TH0=(65536-45872)/256; 
 145   1      TL0=(65536-45872)%256; // 定时器初值，定时 50ms（12M 晶振），由于考虑 MCU 指令处理时间，此处赋初值位 45872
             - 
 146   1      EA=1; 
 147   1      ET0=1; 
 148   1      TR0=1; 
 149   1      } 
 150          
 151          ///////////////////////////////////////////////////////
 152          void timer0() interrupt 1 // 定时计数器中断
 153          { 
 154   1      TH0=(65536-45872)/256; 
 155   1      TL0=(65536-45872)%256; 
 156   1      aa++; 
 157   1      if(aa==20) // 中断 20 次为 1S，秒加 1 
 158   1      { 
 159   2      miao++; 
 160   2      aa=0; 
 161   2      if(miao==60) 
 162   2      { 
 163   3      fen++; // 满 60S, 分加 1,秒清 0 
 164   3      miao=0; 
 165   3      if(fen==60) 
 166   3      { 
 167   4      shi++; // 小时加 1 
 168   4      fen=0; 
 169   4      if(shi==24) shi=0; // 小时满
 170   4      } 
 171   3      } 
 172   2      } 
 173   1      
 174   1      shige=shi%10;
 175   1      shishi=shi/10;
 176   1      fenge=fen%10;
 177   1      fenshi=fen/10;
C51 COMPILER V9.59.0.0   MAIN                                                              01/31/2023 17:23:32 PAGE 4   

 178   1      miaoge=miao%10;
 179   1      miaoshi=miao/10;
 180   1      
 181   1      fasong[0]=shishi;
 182   1      fasong[1]=shige;
 183   1      fasong[2]=fenshi;
 184   1      fasong[3]=fenge;
 185   1      fasong[4]=miaoshi;
 186   1      fasong[5]=miaoge;      
 187   1        
 188   1      
 189   1      
 190   1      
 191   1      } 
 192          //////////////////////////////////////////////////////////
 193          
 194          
 195          void play_display() 
 196          { 
 197   1      if(K3==0) 
 198   1      { delay(1); 
 199   2      if(K3==0) 
 200   2      { 
 201   3      play++; // 用来检测暂停或开始，单数为暂停，双数为开始
 202   3      } 
 203   2      while((i<50)&&(K3==0)) // 检测按键是否松开
 204   2      { 
 205   3      delay(1); 
 206   3      i++; 
 207   3      } 
 208   2      } 
 209   1      if(play%2==1) // 暂停
 210   1      { 
 211   2      TR0=0; 
 212   2      if(K1==0) // 调分
 213   2      { 
 214   3      delay(2); 
 215   3      if(K1==0) fen++; 
 216   3      if(fen==60) fen=0; 
 217   3      delay(2); 
 218   3      while(!K1); 
 219   3      } 
 220   2      if(K2==0) // 调小时
 221   2      { 
 222   3      delay(2); 
 223   3      if(K2==0) shi++; 
 224   3      if(shi==24) shi=0; 
 225   3      delay(2); 
 226   3      while(!K2); 
 227   3      } 
 228   2      } 
 229   1      else // 开始
 230   1      { 
 231   2      TR0=1; 
 232   2      } 
 233   1      }
 234          
 235          unsigned char receive(void)         //数据接收函数
 236          {
 237   1        unsigned char dat;
 238   1        
 239   1        while(RI==0);                   //数据没有接收完毕时等待接收
C51 COMPILER V9.59.0.0   MAIN                                                              01/31/2023 17:23:32 PAGE 5   

 240   1        RI=0;                           //接收完毕时清零
 241   1        dat=SBUF;                       //将接收缓冲器中的数据存入dat
 242   1        return dat;                     //将接收到的数据返回
 243   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    566    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
